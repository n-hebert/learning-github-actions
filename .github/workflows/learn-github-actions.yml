name: learn-github-actions
on: 
 push:

jobs:
  echo-commit-message-title:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set commit title
        run: echo COMMIT_MESSAGE=$(git log -n 1 --pretty=format:%s) >> $GITHUB_ENV
      - name: Print GitHub Env
        run: cat $GITHUB_ENV
      - name: Echo commit title
        run: echo ${COMMIT_MESSAGE}

  generate-file:
    runs-on: ubuntu-latest
    container:
      image: ruby:2.6.6
    steps:
      - name: "Make subdir"
        run: mkdir -p "./sub/dir"
      - name: "Print to file"
        working-directory: "./sub/dir/"
        run: echo hi > file.txt
      - name: Upload output file
        uses: actions/upload-artifact@v2
        with:
          name: hello-file
          path: sub/dir/file.txt

  read-file:
    needs: generate-file
    runs-on: ubuntu-latest
    container:
      image: ruby:2.6.6
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: hello-file
      - name: "Print file"
        run: cat ./sub/dir/file.txt

  test-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        entry: [ test ]
    steps:
      - run: echo ${{ matrix.entry }}     
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

  test-cache:
    runs-on: ubuntu-latest
    steps:
     - name: bundle cache
       uses: actions/cache@v2
       id: bundle-cache
       with:
          path: |
            vendor/cache
            vendor/bundle
          key: ${{ runner.os }}-bundle-${{ hashFiles(format('**/{0}{1}.lock', 'Gemfile', inputs.gemfile_suffix)) }}
          restore-keys: |
            ${{ runner.os }}-bundle-
